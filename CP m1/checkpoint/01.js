const Queue = require('../DS').Queue;

/* ‚ö†Ô∏è NO MODIFICAR NADA POR ENCIMA DE ESTA L√çNEA ‚ö†Ô∏è

 ----*** üçπ BAR CHECKPOINT üçπ ***----

Felicitaciones por llegar a esta instancia! El checkpoint que realizar√°s a continuaci√≥n
consistir√° en resolver varios problemas que surgieron en un bar.
Tendr√°s que resolver cada uno de ellos, aplicando los conceptos aprendidos durante el m√≥dulo uno.
üçÄ ¬°Suerte! üçÄ


1Ô∏è‚É£ ***** EJERCICIO 1 QUEUE ***** - guardarTragos() 1Ô∏è‚É£

Ha llegado un nuevo pedido de tragos. Es necesario recogerlos a todos y guardarlos dentro de la barra.
Adem√°s, se desea llevar un registro de la cantidad de cada trago que se ha vendido.Para esto tendr√°s que 
implementar la funci√≥n guardarTragos, la cu√°l recibir√° por par√°metros una Queue con muchos üç∏ Tragos üç∏
que se tendr√°n que guardar en un objeto que nos servir√° como contenedor.

üìù EJEMPLO üìù
(INPUT) ‚û°
["margarita", "daiquiri", "mojito", "pi√±a colada", "negroni", "daiquiri"]

(OUTPUT) ‚û°
{
  margarita: {trago: "margarita", cantidad: 1},
  daiquiri: {trago: "daiquiri", cantidad: 2},
  mojito: {trago: "mojito", cantidad: 1},
  pi√±a colada: {trago: "pi√±a colada", cantidad: 1},
  negroni: {trago: "negroni", cantidad: 1}
}

REQUISITOS:
  üü¢ Respetar el principio de FIFO que corresponde a las Queues a la hora de guardar los tragos.
  üü¢ Retornar un objeto, que tendr√° como key value los elementos que agregas y quitas de la Queue.
  üü¢ Cada trago debe tener:
    - una propiedad "trago" que almacene el nombre del trago.
    - una propiedad "cantidad" que almacene la cantidad vendida del mismo.
  üü¢ ¬°SI O SI necesit√°s utilizar una Queue!

  üëÄ TIP: Chequear el archivo DS.js para ver la funci√≥n constructora Queue, y ver sus m√©todos disponibles.
*/

function guardarTragos(tragosQueue) {
   // Tu c√≥digo aqu√≠:
  const tragosObj = {};

  while(tragosQueue.size() > 0){ // mientra que el tama√±o de la queue sea mayor que 0
    const trago = tragosQueue.dequeue(); // guardo el primer elemento de la queue

    if(!tragosObj[trago]){  //si en el objeto tragos no tiene de propiedad el primer elemento que saque de la queue
      tragosObj[trago] = {trago: trago, cantidad: 1}; //le asigno la propiedad con su valor
    }else{   // de lo contrario 
      tragosObj[trago].cantidad++; //accede al valor de su prop cantidad e incrementalo por uno
    }
  }

  return tragosObj;
   
}
const tragosQueue = new Queue();
tragosQueue.enqueue("margarita");
tragosQueue.enqueue("daiquiri");
tragosQueue.enqueue("daiquiri");
tragosQueue.enqueue("mojito");
tragosQueue.enqueue("mojito");
tragosQueue.enqueue("mojito");
tragosQueue.enqueue("pi√±a colada");
tragosQueue.enqueue("negroni");
const result = guardarTragos(tragosQueue);
console.log(result);


// ‚ö†Ô∏è NO MODIFICAR NADA POR DEBAJO DE ESTA L√çNEA ‚ö†Ô∏è
module.exports = guardarTragos;
